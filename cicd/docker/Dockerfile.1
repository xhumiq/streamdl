FROM golang:1.11-alpine3.8 as builder
# Must run in parent folder

ARG BUILD_GITHASH="CICD"
ARG BUILD_VERSION=0.1.0
ARG BUILD_TAG=release
ARG BUILD_TIME=
ARG BRANCH=missing

ENV TIME_ZONE=America/Los_Angeles

RUN apk --no-cache add curl git tzdata && \
    curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh && \
    cp /usr/share/zoneinfo/$TIME_ZONE /etc/localtime && \
    echo $TIME_ZONE > /etc/timezone && \
    apk del tzdata

ENV GO111MODULE=on

WORKDIR /go/src/ntc/app

COPY go.mod .
COPY go.sum .

RUN go mod download

COPY . .

RUN	echo "-----------------------------------------------------------------------------------------" && \
    echo "Updating cdsrv packages - and building source" && \
    echo "BUILD_VERSION= $BUILD_VERSION" && \
		echo "BRANCH=        $BRANCH"

RUN export BUILD_TIME=$BUILD_TIME && \
    export BUILD_TIME=${BUILD_TIME:-`date '+%F_%H:%M:%S'`} && \
    export BUILD_FLAGS="-w -extldflags \"-static\" -s -X main.version=$BUILD_VERSION -X main.gitHash=$BUILD_GITHASH -X main.branch=$BRANCH -X main.buildStamp=$BUILD_TIME" && \
    CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -tags "$BUILD_TAG" -ldflags "$BUILD_FLAGS" -a -installsuffix cgo -o cdsrv

FROM alpine:3.8

ENV SOURCE_COMMIT=$BUILD_GITHASH
ENV SOURCE_TAG=$BUILD_VERSION
ENV BRANCH=$BRANCH
ENV TIME_ZONE=America/Los_Angeles

RUN apk --no-cache add tzdata && \
    cp /usr/share/zoneinfo/$TIME_ZONE /etc/localtime && \
    echo $TIME_ZONE > /etc/timezone && \
    apk del tzdata

ENV API_PORT 9110
ENV REPO_NAME ""
ENV REPO_BRANCH ""
ENV DEPLOY_ROOT_PATH "/opt"
ENV GIT_ROOT_PATH "/srv/repos"
ENV LOG_FILE sales
ENV LOG_PATH "logs"

WORKDIR /app

COPY --from=builder /go/src/ntc/app/cdsrv ./

EXPOSE $API_PORT

CMD ["/app/cdsrv", "run"]
